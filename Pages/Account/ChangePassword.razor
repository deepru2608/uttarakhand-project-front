@layout MainLayout
@page "/ChangePwd"
@attribute [Authorize(Roles = "User, Admin, SuperAdmin")]

<div class="card border-left-primary shadow h-100 py-2">
    <div class="card-body">
        <EditForm Model="changePassword" OnValidSubmit="ChangeUserPassword">
            <DataAnnotationsValidator />
            <div class="row">
                <div class="col-sm-12 text-left">
                    <h4><span class="border-bottom" style="color: #3C40C6">Change Password</span></h4>
                </div>
                <div class="col-sm-4 mt-3">
                    <SfTextBox CssClass="e-outline" Placeholder="Current Password" Type="@Syncfusion.Blazor.Inputs.InputType.Password"
                               @bind-Value="changePassword.CurrentPassword" FloatLabelType="@FloatLabelType.Auto"></SfTextBox>
                    <ValidationMessage For="@(() => changePassword.CurrentPassword)" style="color: red" />
                </div>
                <div class="col-sm-4 mt-3">
                    <SfTextBox CssClass="e-outline" Placeholder="New Password" Type="@Syncfusion.Blazor.Inputs.InputType.Password"
                               @bind-Value="changePassword.NewPassword" FloatLabelType="@FloatLabelType.Auto"></SfTextBox>
                    <ValidationMessage For="@(() => changePassword.NewPassword)" style="color: red" />
                </div>
                <div class="col-sm-4 mt-3">
                    <SfTextBox CssClass="e-outline" Placeholder="Confirm Password" Type="@Syncfusion.Blazor.Inputs.InputType.Password"
                               @bind-Value="changePassword.ConfirmPassword" FloatLabelType="@FloatLabelType.Auto"></SfTextBox>
                    <ValidationMessage For="@(() => changePassword.ConfirmPassword)" style="color: red" />
                </div>
                <div class="col-sm-12 mt-3 text-left">
                    <SfButton IsPrimary="true"><i class="fas fa-plus-circle"></i>&nbsp;Change Password</SfButton>
                    &nbsp;<img src="Images/BlockLoader.gif" alt="Loader"
                               style="height: 30px; width: 30px; display: @Loader" />
                </div>
            </div>
        </EditForm>
    </div>
</div>

<SfToast @ref="@ToastChnagePassObj" ID="toast_type">
    <ToastPosition X="Right"></ToastPosition>
</SfToast>

@code {
    SfToast ToastChnagePassObj;
    public ChangePasswordRazorModel changePassword { get; set; }
    public string Loader { get; set; }

    protected override void OnInitialized()
    {
        changePassword = new ChangePasswordRazorModel();
        Loader = "none";
    }

    async Task ChangeUserPassword()
    {
        Loader = "inline";
        if (changePassword != null)
        {
            var authUser = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            var user = await UserManager.GetUserAsync(authUser.User);
            if (user != null)
            {
                changePassword.userId = user.Id;
                var result = await UserService.ChangeUserPasswordAsync(changePassword);
                if (result == "success")
                {
                    Loader = "none";
                    await ToastChnagePassObj.Show(new ToastModel {Title = "Success!", Content = "Password has been changed successfully.", CssClass = "e-toast-success", Icon = "e-success toast-icons"});
                    NavigationManager.NavigateTo("/", true);
                }
                else
                {
                    Loader = "none";
                    changePassword = new ChangePasswordRazorModel();
                    await ToastChnagePassObj.Show(new ToastModel {Title = "Error!", Content = "Something goes wrong, please try again after sometime!", CssClass = "e-toast-danger", Icon = "e-error toast-icons"});
                }
            }
        }
    }
}
